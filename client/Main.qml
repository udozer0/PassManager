import QtQuick
import QtQuick.Controls
import App

ApplicationWindow {
    id: window
    visible: true
    width: 600
    height: 400
    title: qsTr("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram")
    function navigateTo(screen) {
            const url = screen;
            console.log("üîÅ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω:", url);

            var component = Qt.createComponent(url);
            if (component.status === Component.Ready) {
                stackView.push(component.createObject(stackView, {
                    navigateTo: navigateTo
                }));
            } else {
                console.log("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", component.errorString());
            }
        }

    AuthClient {
        id: auth

        onLoginConfirmed: {
            console.log("‚úÖ –í—Ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω")
            navigateTo("PasswordList.qml")
        }

        onLoginDenied: {
            console.log("‚ùå –í—Ö–æ–¥ –æ—Ç–∫–ª–æ–Ω—ë–Ω")
        }

        onMessageReceived: function(message) {
            console.log("[WS] –°–æ–æ–±—â–µ–Ω–∏–µ: " + message)
        }

        onConnected: {
            console.log("üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ —Å–µ—Ä–≤–µ—Ä—É")
        }

        onDisconnected: {
            console.log("üîå –û—Ç–∫–ª—é—á–µ–Ω–æ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
        }

        onErrorOccurred: function(msg) {
            console.log("‚ùó –û—à–∏–±–∫–∞: " + msg)
        }
    }

    StackView {
        id: stackView
        anchors.fill: parent
    }

    Component.onCompleted: {
            // ‚¨áÔ∏è –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—ã–π —ç–∫—Ä–∞–Ω —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
            var component = Qt.createComponent("LoginScreen.qml");
            if (component.status === Component.Ready) {
                stackView.push(component.createObject(stackView, {
                    auth: auth,
                    navigateTo: navigateTo
                }));
            } else {
                console.log("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ LoginScreen:", component.errorString());
            }
        }
}
